{
  "name": "grunt-cmd-concat",
  "description": "Concatenate cmd files.",
  "version": "0.1.1",
  "homepage": "https://github.com/spmjs/grunt-cmd-concat",
  "author": {
    "name": "Hsiaoming Yang",
    "email": "lepture@me.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/spmjs/grunt-cmd-concat.git"
  },
  "bugs": {
    "url": "https://github.com/spmjs/grunt-cmd-concat/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/spmjs/grunt-cmd-concat/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "cmd-util": "~0.3.5"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-cmd-concat\n\n> Concatenate cmd files.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-cmd-concat --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-cmd-concat');\n```\n\n## The \"concat\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `cmd_concat` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  concat: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.paths\n\nType: `Array`\nDefault value: `['sea-modules']`\n\nWhere are the modules in the sea.\n\n#### options.separator\n\nType: `String`\nDefault value: `',  '`\n\nA string value that is used to do something with whatever.\n\n#### options.banner\n\nType: `String`\n\nThe banner of the concated files.\n\n#### options.relative\n\nType: `Boolean`\nDefault value: `true`\n\nInclude all relative dependencies.\n\n#### options.uglify\n\nType: `Object`\n\nUglify prettifier, you really don't have to change this value.\n\n#### options.processors\n\nType: `Object`\n\nProcessors are functions to find the related files to concat.\n\n\n### Usage Examples\n\n#### Simple Concat\n\nThis is the same as `grunt-contrib-concat`.\n\n```js\ngrunt.initConfig({\n  concat: {\n    foo: {\n      options: {\n        relative: false\n      },\n      files: {\n        'dist/a.js': ['src/a.js', 'src/b.js'],\n      }\n    }\n  }\n})\n```\n\n#### Relative Concat\n\nThis will include all relative dependencies.\n\n```js\ngrunt.initConfig({\n  concat: {\n    foo: {\n      files: {\n        'dist/a.js': ['src/a.js', 'src/b.js'],\n      }\n    }\n  }\n})\n```\n\nThe `a.js` is something like:\n\n```js\ndefine('a', ['./c'], ...)\n```\n\nAnd the result should be the concat of `a.js`, `c.js` and `b.js`.\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n**April 10th, 2013** `0.1.1`\n\n- Update `cmd-util`\n- Bugfix\n\n**April 1st, 2013** `0.1.0`\n\nFirst version.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-cmd-concat@0.1.1",
  "_from": "grunt-cmd-concat@~0.1.0"
}
